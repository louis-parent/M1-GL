
package tp2.client;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.0.2
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ConcreteHotelService", targetNamespace = "http://service.server.tp2/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ConcreteHotelService {


    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "helloWorld", targetNamespace = "http://service.server.tp2/", className = "tp2.client.HelloWorld")
    @ResponseWrapper(localName = "helloWorldResponse", targetNamespace = "http://service.server.tp2/", className = "tp2.client.HelloWorldResponse")
    @Action(input = "http://service.server.tp2/ConcreteHotelService/helloWorldRequest", output = "http://service.server.tp2/ConcreteHotelService/helloWorldResponse")
    public String helloWorld();

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg4
     * @param arg1
     * @param arg0
     * @return
     *     returns java.util.List<tp2.client.Offer>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "fetchAvailableOffers", targetNamespace = "http://service.server.tp2/", className = "tp2.client.FetchAvailableOffers")
    @ResponseWrapper(localName = "fetchAvailableOffersResponse", targetNamespace = "http://service.server.tp2/", className = "tp2.client.FetchAvailableOffersResponse")
    @Action(input = "http://service.server.tp2/ConcreteHotelService/fetchAvailableOffersRequest", output = "http://service.server.tp2/ConcreteHotelService/fetchAvailableOffersResponse")
    public List<Offer> fetchAvailableOffers(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        XMLGregorianCalendar arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        XMLGregorianCalendar arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        int arg4);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "makeReservation", targetNamespace = "http://service.server.tp2/", className = "tp2.client.MakeReservation")
    @ResponseWrapper(localName = "makeReservationResponse", targetNamespace = "http://service.server.tp2/", className = "tp2.client.MakeReservationResponse")
    @Action(input = "http://service.server.tp2/ConcreteHotelService/makeReservationRequest", output = "http://service.server.tp2/ConcreteHotelService/makeReservationResponse")
    public boolean makeReservation(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        int arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        Customer arg3);

}
